{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualMachines_test_vm_name": {
            "defaultValue": "test-vm",
            "type": "String"
        },
        "bastionHosts_test_bastion_name": {
            "defaultValue": "test-bastion",
            "type": "String"
        },
        "virtualNetworks_test_vnet_name": {
            "defaultValue": "test-vnet",
            "type": "String"
        },
        "networkInterfaces_test_nic_name": {
            "defaultValue": "test-nic",
            "type": "String"
        },
        "azureFirewalls_test_firewall_name": {
            "defaultValue": "test-firewall",
            "type": "String"
        },
        "routeTables_test_uservm_routetable_name": {
            "defaultValue": "test-uservm-routetable",
            "type": "String"
        },
        "publicIPAddresses_test_bastion_pubIP_name": {
            "defaultValue": "test-bastion-pubIP",
            "type": "String"
        },
        "firewallPolicies_test_firewall_policy_name": {
            "defaultValue": "test-firewall-policy",
            "type": "String"
        },
        "publicIPAddresses_test_firewall_pubIP_name": {
            "defaultValue": "test-firewall-pubIP",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/firewallPolicies",
            "apiVersion": "2020-11-01",
            "name": "[parameters('firewallPolicies_test_firewall_policy_name')]",
            "location": "centralus",
            "tags": {
                "author": "Vamsi",
                "deployed_with": "Terraform"
            },
            "properties": {
                "sku": {
                    "tier": "Premium"
                },
                "threatIntelMode": "Alert",
                "intrusionDetection": {
                    "mode": "Alert",
                    "configuration": {
                        "signatureOverrides": [],
                        "bypassTrafficSettings": []
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[parameters('publicIPAddresses_test_bastion_pubIP_name')]",
            "location": "centralus",
            "tags": {
                "author": "Vamsi",
                "deployed_with": "Terraform"
            },
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "zones": [
                "1",
                "2",
                "3"
            ],
            "properties": {
                "ipAddress": "20.84.192.90",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[parameters('publicIPAddresses_test_firewall_pubIP_name')]",
            "location": "centralus",
            "tags": {
                "author": "Vamsi",
                "deployed_with": "Terraform"
            },
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "zones": [
                "1",
                "2",
                "3"
            ],
            "properties": {
                "ipAddress": "20.84.192.72",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-11-01",
            "name": "[parameters('routeTables_test_uservm_routetable_name')]",
            "location": "centralus",
            "tags": {
                "author": "Vamsi",
                "deployed_with": "Terraform"
            },
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "fw-udr",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.2.10.4",
                            "hasBgpOverride": false
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-12-01",
            "name": "[parameters('virtualMachines_test_vm_name')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_test_nic_name'))]"
            ],
            "tags": {
                "author": "Vamsi",
                "deployed_with": "Terraform"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2s_v3"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsDesktop",
                        "offer": "Windows-10",
                        "sku": "20h2-pro",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "test-os-disk",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "writeAcceleratorEnabled": false,
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', 'test-os-disk')]"
                        },
                        "diskSizeGB": 128
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "user-vm",
                    "adminUsername": "win10admin",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByOS"
                        },
                        "winRM": {
                            "listeners": []
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_test_nic_name'))]",
                            "properties": {
                                "primary": true
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": false
                    }
                },
                "priority": "Regular",
                "extensionsTimeBudget": "PT1H30M"
            }
        },
        {
            "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('firewallPolicies_test_firewall_policy_name'), '/DefaultApplicationRuleCollectionGroup')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicies_test_firewall_policy_name'))]"
            ],
            "properties": {
                "priority": 300,
                "ruleCollections": [
                    {
                        "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                        "action": {
                            "type": "Allow"
                        },
                        "rules": [
                            {
                                "ruleType": "ApplicationRule",
                                "name": "allow-all-on-https",
                                "protocols": [
                                    {
                                        "protocolType": "Https",
                                        "port": 443
                                    }
                                ],
                                "fqdnTags": [],
                                "webCategories": [],
                                "targetFqdns": [
                                    "*"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                    "10.2.1.0/24"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": []
                            }
                        ],
                        "name": "Application-Rule-Collection1",
                        "priority": 500
                    },
                    {
                        "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                        "action": {
                            "type": "Deny"
                        },
                        "rules": [
                            {
                                "ruleType": "ApplicationRule",
                                "name": "Deny-Sites",
                                "protocols": [
                                    {
                                        "protocolType": "Https",
                                        "port": 443
                                    }
                                ],
                                "fqdnTags": [],
                                "webCategories": [],
                                "targetFqdns": [
                                    "*.youtube.com",
                                    "*.netflix.com",
                                    "*.google.com",
                                    "*.github.com"
                                ],
                                "targetUrls": [],
                                "terminateTLS": false,
                                "sourceAddresses": [
                                    "10.2.1.0/24"
                                ],
                                "destinationAddresses": [],
                                "sourceIpGroups": []
                            }
                        ],
                        "name": "Application-Rule-Collection2",
                        "priority": 100
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('firewallPolicies_test_firewall_policy_name'), '/DefaultNetworkRuleCollectionGroup')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicies_test_firewall_policy_name'))]"
            ],
            "properties": {
                "priority": 200,
                "ruleCollections": [
                    {
                        "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                        "action": {
                            "type": "Allow"
                        },
                        "rules": [
                            {
                                "ruleType": "NetworkRule",
                                "name": "allow-outbound-azure-monitor",
                                "ipProtocols": [
                                    "TCP"
                                ],
                                "sourceAddresses": [
                                    "10.2.1.0/24"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                    "168.63.129.16"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                    "80",
                                    "32526",
                                    "443"
                                ]
                            }
                        ],
                        "name": "Network-Rule-Collection",
                        "priority": 500
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkInterfaces_test_nic_name')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_test_vnet_name'), 'User-VM-Subnet')]"
            ],
            "tags": {
                "author": "Vamsi",
                "deployed_with": "Terraform"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat(parameters('networkInterfaces_test_nic_name'), '-ipconfig')]",
                        "properties": {
                            "privateIPAddress": "10.2.1.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_test_vnet_name'), 'User-VM-Subnet')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('routeTables_test_uservm_routetable_name'), '/fw-udr')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_test_uservm_routetable_name'))]"
            ],
            "properties": {
                "addressPrefix": "0.0.0.0/0",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "10.2.10.4",
                "hasBgpOverride": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[parameters('virtualNetworks_test_vnet_name')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_test_uservm_routetable_name'))]"
            ],
            "tags": {
                "author": "Vamsi",
                "deployed_with": "Terraform"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/16"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": []
                },
                "subnets": [
                    {
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "10.2.13.0/27",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "AzureFirewallSubnet",
                        "properties": {
                            "addressPrefix": "10.2.10.0/26",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "User-VM-Subnet",
                        "properties": {
                            "addressPrefix": "10.2.1.0/24",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_test_uservm_routetable_name'))]"
                            },
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_test_vnet_name'), '/AzureBastionSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_test_vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.2.13.0/27",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_test_vnet_name'), '/AzureFirewallSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_test_vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.2.10.0/26",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2020-11-01",
            "name": "[parameters('bastionHosts_test_bastion_name')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_test_bastion_pubIP_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_test_vnet_name'), 'AzureBastionSubnet')]"
            ],
            "tags": {
                "author": "Vamsi",
                "deployed_with": "Terraform"
            },
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "dnsName": "bst-e00b8e13-6172-4faf-add5-c6289c0bf7af.bastion.azure.com",
                "ipConfigurations": [
                    {
                        "name": "bastion-config",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_test_bastion_pubIP_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_test_vnet_name'), 'AzureBastionSubnet')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_test_vnet_name'), '/User-VM-Subnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_test_vnet_name'))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_test_uservm_routetable_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.2.1.0/24",
                "routeTable": {
                    "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_test_uservm_routetable_name'))]"
                },
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2020-11-01",
            "name": "[parameters('azureFirewalls_test_firewall_name')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_test_firewall_pubIP_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_test_vnet_name'), 'AzureFirewallSubnet')]",
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicies_test_firewall_policy_name'))]"
            ],
            "tags": {
                "author": "Vamsi",
                "deployed_with": "Terraform"
            },
            "properties": {
                "sku": {
                    "name": "AZFW_VNet",
                    "tier": "Premium"
                },
                "threatIntelMode": "Alert",
                "additionalProperties": {},
                "ipConfigurations": [
                    {
                        "name": "fw-config",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_test_firewall_pubIP_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_test_vnet_name'), 'AzureFirewallSubnet')]"
                            }
                        }
                    }
                ],
                "networkRuleCollections": [],
                "applicationRuleCollections": [],
                "natRuleCollections": [],
                "firewallPolicy": {
                    "id": "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicies_test_firewall_policy_name'))]"
                }
            }
        }
    ]
}